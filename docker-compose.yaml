services:
  api:
    build: .
    image: image-health-monitor
    container_name: api-health-monitor
    volumes:
      - ./application:/application
    ports:
      - 9501:9501
    networks:
      - app-network

  worker:
    build: .
    image: image-health-monitor
    container_name: worker-health-monitor
    restart: on-failure
    volumes:
      - ./application:/application
    command: php artisan anomalies:analyse
    depends_on:
      - kafka-ui
    networks:
      - app-network

  database:
    image: mysql:8
    container_name: db-health-monitor
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=dev_database
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ROOT_USER=root
    ports:
      - 4307:3306
    networks:
      - app-network

  database-ui:
    image: phpmyadmin
    container_name: db-ui-health-monitor
    restart: always
    environment:
      - PMA_HOST=database
      - PMA_PORT=3306
      - PMA_USER=root
      - PMA_PASSWORD=root
    ports:
      - 8080:80
    depends_on:
      - database
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper-health-monitor
    networks:
      - app-network
    ports:
      - "2182:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka-health-monitor
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9098
      KAFKA_PORT: 9098
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "
          new-health-data-added-event:1:1,
        "
    networks:
      - app-network
    ports:
      - "9098:9098"
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui-health-monitor
    image: redpandadata/console:v2.3.1
    restart: on-failure
    environment:
      KAFKA_BROKERS: kafka:9098
    depends_on:
      - kafka
    ports:
      - "7002:8080"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge